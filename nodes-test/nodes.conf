hyperstorage: {
  zmq-cluster-manager: {
    node.advertised-port: ${?hyperstorage-inner-zmq-port}
    service-registrator: {
      node-id: ${hyperstorage.zmq-cluster-manager.node.advertised-address}-${hyperstorage.zmq-cluster-manager.node.advertised-port}
      address: ${hyperstorage.zmq-cluster-manager.node.advertised-address}
      port: ${hyperstorage.zmq-cluster-manager.node.advertised-port}
    }

    hyperbus: {
      transports: {
        zmq-server: {
          port: ${hyperstorage.zmq-cluster-manager.node.advertised-port}
        }
      }
    }
  }
}

hyperbus: {
  read-messages-log-level = TRACE
  write-messages-log-level = TRACE
  transports: {
    zmq-server: {
      class-name: com.hypertino.hyperbus.transport.ZMQServer
      port: ${?hyperbus-zmq-port}
      interface: "*"
      zmq-io-threads: 1
      max-sockets: 55000
      response-timeout: 30s
    }

    zmq-client: {
      class-name: com.hypertino.hyperbus.transport.ZMQClient
      default-port: ${?hyperbus-zmq-port}
      zmq-io-threads: 1
      ask-timeout: 35s
      keep-alive-timeout: 60s
      max-sockets: 55000
      max-output-queue-size: 16384
    }
    inproc: {
      class-name: com.hypertino.hyperbus.transport.InprocTransport
      serialize: true
    }
  }

  client-routes: [
    {
      transport: inproc
      type: events
    }
    {
      transport: zmq-client
      resolver: hyperstorage-cluster-resolver
      type: commands
    }
  ]

  server-routes: [
    {
      transport: inproc
      type: events
    }
    {
      transport: zmq-server
      registrator: hyperstorage-cluster-registrator
      type: commands
    }
  ]
}
