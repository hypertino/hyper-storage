serializers {
  java = "akka.serialization.JavaSerializer"
  proto = "akka.remote.serialization.ProtobufSerializer"
  myown = "docs.serialization.MyOwnSerializer"
}

serialization-bindings {
  "java.lang.Boolean" = myown
}

actor-system-registry: {
  hyperstorage-0: {
    actor-system-name: hyperstorage
    actor-system-key: hyperstorage-0
    log-messages: true
    deque-dispatcher: {
      executor = "thread-pool-executor"
      type = Dispatcher
    }
    akka {
      loggers = ["akka.event.slf4j.Slf4jLogger"]
      loglevel = "DEBUG"
      actor {
        provider = "akka.cluster.ClusterActorRefProvider"
        deque-dispatcher.mailbox-type = "akka.dispatch.UnboundedDequeBasedMailbox"
        debug {
          receive = on
          autoreceive = on
          lifecycle = on
        }
      }
      remote {
        log-remote-lifecycle-events = off
        netty.tcp {
          hostname = "127.0.0.1"
          port = 2550
        }
      }

      cluster {
        seed-nodes = [
          "akka.tcp://hyperstorage@127.0.0.1:2550"
        ]
        auto-down-unreachable-after = off
        roles = ["hyperstorage"]
      }

      contrib.cluster.pub-sub {
        name = distributedPubSubMediator
        role = ""
        gossip-interval = 1s
        removed-time-to-live = 120s
      }
    }
  }

  hyperstorage-1: {
    actor-system-name: hyperstorage
    actor-system-key: hyperstorage-1
    log-messages: true
    deque-dispatcher: {
      executor = "thread-pool-executor"
      type = Dispatcher
    }
    akka {
      loggers = ["akka.event.slf4j.Slf4jLogger"]
      loglevel = "DEBUG"
      actor {
        provider = "akka.cluster.ClusterActorRefProvider"
        deque-dispatcher.mailbox-type = "akka.dispatch.UnboundedDequeBasedMailbox"
        debug {
          receive = on
          autoreceive = on
          lifecycle = on
        }
      }
      remote {
        log-remote-lifecycle-events = off
        netty.tcp {
          hostname = "127.0.0.1"
          port = 2551
        }
      }

      cluster {
        seed-nodes = [
          "akka.tcp://hyperstorage@127.0.0.1:2551"
        ]
        auto-down-unreachable-after = off
        roles = ["hyperstorage"]
      }

      contrib.cluster.pub-sub {
        name = distributedPubSubMediator
        role = ""
        gossip-interval = 1s
        removed-time-to-live = 120s
      }
    }
  }

  hyperstorage-2: {
    actor-system-name: hyperstorage
    actor-system-key: hyperstorage-2
    log-messages: true
    deque-dispatcher: {
      executor = "thread-pool-executor"
      type = Dispatcher
    }
    akka {
      loggers = ["akka.event.slf4j.Slf4jLogger"]
      loglevel = "DEBUG"
      actor {
        provider = "akka.cluster.ClusterActorRefProvider"
        deque-dispatcher.mailbox-type = "akka.dispatch.UnboundedDequeBasedMailbox"
        debug {
          receive = on
          autoreceive = on
          lifecycle = on
        }
      }
      remote {
        log-remote-lifecycle-events = off
        netty.tcp {
          hostname = "127.0.0.1"
          port = 2552
        }
      }

      cluster {
        seed-nodes = [
          "akka.tcp://hyperstorage@127.0.0.1:2551"
        ]
        auto-down-unreachable-after = off
        roles = ["hyperstorage"]
      }

      contrib.cluster.pub-sub {
        name = distributedPubSubMediator
        role = ""
        gossip-interval = 1s
        removed-time-to-live = 120s
      }
    }
  }
}

hyperbus-0: {
  hyperbus: {
    group-name: hyperbus-0
    log-messages: true
    transports: {
      inproc {
        class-name: com.hypertino.hyperbus.transport.InprocTransport
        serialize: true
      }
//      akka-cluster-client: {
//        class-name: DistributedAkkaClientTransport,
//        configuration: ${actor-system-registry.eu-inn-0}
//      },
//      akka-cluster-server: {
//        class-name: DistributedAkkaServerTransport,
//        configuration: ${actor-system-registry.eu-inn-0}
//      },
      fault-client: {
        class-name: mock.FaultClientTransport,
      }
    },
    client-routes: [
      {
        match: {
          r.q.path: "faulty"
          m: "^l^feed:"
        },
        transport: fault-client
      },
      {
        transport: inproc
      }
    ],
    server-routes: [
      {
        transport: inproc
      }
    ]
  }
}

hyperbus-1: {
  hyperbus: {
    group-name: hyperbus-1
    transports: {
      inproc {
        class-name: com.hypertino.hyperbus.transport.InprocTransport
        serialize: true
      }
//      akka-cluster-client: {
//        class-name: DistributedAkkaClientTransport,
//        configuration: ${actor-system-registry.eu-inn-1}
//      },
//      akka-cluster-server: {
//        class-name: DistributedAkkaServerTransport,
//        configuration: ${actor-system-registry.eu-inn-1}
//      }
    },
    client-routes: [
      {
        transport: inproc
      }
    ],
    server-routes: [
      {
        transport: inproc
      }
    ]
  }
}

hyperbus-2: {
  hyperbus: {
    group-name: hyperbus-2
    transports: {
      inproc {
        class-name: com.hypertino.hyperbus.transport.InprocTransport
        serialize: true
      }
//      akka-cluster-client: {
//        class-name: DistributedAkkaClientTransport,
//        configuration: ${actor-system-registry.eu-inn-2}
//      },
//      akka-cluster-server: {
//        class-name: DistributedAkkaServerTransport,
//        configuration: ${actor-system-registry.eu-inn-2}
//      }
    },
    client-routes: [
      {
        transport: inproc
      }
    ],
    server-routes: [
      {
        transport: inproc
      }
    ]
  }
}

hyperstorage {
  zmq-cluster-manager-0 {
  }

  zmq-cluster-manager-1 {
    node {
      advertised-address: 127.0.0.1
      advertised-port: 2561
    }
    service-registrator: {
      node-id: 127.0.0.1-2561
      address: 127.0.0.1
      port: 2561
    }

    hyperbus: {
      transports: {
        zmq-server: {
          port: 2561
        }
      }

      server-routes: [
        {
          transport: zmq-server
          registrator: hyperstorage-cluster-registrator-1
        }
      ]
    }
  }

  zmq-cluster-manager-2 {
    node {
      advertised-address: 127.0.0.1
      advertised-port: 2562
    }

    service-registrator: {
      node-id: 127.0.0.1-2562
      address: 127.0.0.1
      port: 2562
    }

    hyperbus: {
      transports: {
        zmq-server: {
          port: 2562
        }
      }

      server-routes: [
        {
          transport: zmq-server
          registrator: hyperstorage-cluster-registrator-2
        }
      ]
    }
  }
}
